{"version":3,"file":"static/js/221.b3ed965f.chunk.js","mappings":"kOAGaA,EAAOC,EAAAA,GAAAA,GAAH,kQAaJC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uL,SCkBvB,EA7BkB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OAAOF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OAChB,SAACV,EAAD,WACE,UAACE,EAAD,CAAYS,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAAhD,WACE,gBACES,IACEJ,EAAW,8CACgCA,GACvC,CAAEK,SAAAA,GAERC,IAAKP,EACLQ,MAAM,SAER,uBAAIR,QAXGD,EADK,GAgBnB,ECbD,EARaP,EAAAA,GAAAA,GAAH,4JCcV,EAZkB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACnB,OACE,SAAC,EAAD,WACE,SAAC,EAAD,CAAWA,OAAQA,KAGxB,C,kKCRYc,E,QAAkBjB,GAAAA,IAAH,6T,SC2B5B,EAzBa,SAAPkB,EAAQ,GAAkB,IAAhBC,EAAe,EAAfA,SACd,GAAmCC,EAAAA,EAAAA,MAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAElB,OACE,SAACL,EAAD,WACE,UAACC,EAAD,CACEK,aAAa,MACbJ,SAAUG,GAAa,gBAAGE,EAAH,EAAGA,MAAH,OAAeL,EAASK,EAAxB,IAFzB,WAIE,oCACMH,EAAS,UADf,IAEEI,WAAS,EACTC,YAAY,eACZC,KAAM,OAER,mBAAQC,KAAK,SAAb,UACE,2BACE,SAAC,MAAD,CAAiBZ,MAAM,OAAOa,OAAO,iBAMhD,ECCD,EAtBmB,WACjB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO3B,EAAP,KAAe4B,EAAf,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBH,GAAaI,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACpCP,EAAUO,EAAKC,QAChB,GACF,GAAE,CAACN,IAMJ,OACE,iCACE,SAAC,EAAD,CAAMd,SANe,SAAAK,GAEvBU,EAD6B,KAAVV,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,KAIG,SAACgB,EAAA,EAAD,CAAWrC,OAAQA,MAGxB,C,2KCxBKsC,EAAM,mCACNC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAFvC,cACCI,EADD,yBAIEA,GAJF,kEAOA,SAAeT,EAAtB,+CAAO,OAAP,oBAAO,WAAgCZ,GAAhC,uFACkBoB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,YACsBjB,IAFxC,cACCqB,EADD,yBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BvC,GAA9B,uFACkBqC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BnC,EAA/B,oBAA6CkC,IAD/D,cACCI,EADD,yBAEEA,GAFF,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgCxC,GAAhC,uFACkBqC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAnC,EADA,4BACsBkC,IAFxC,cACCI,EADD,yBAIEA,GAJF,kE","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.js","components/Form/Form.styled.jsx","components/Form/Form.js","pages/MoviesPage/MoviesPage.js","servise/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Item = styled.li`\n  background-color: #fff;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  border-radius: 10px;\n  text-align: center;\n  overflow: hidden;\n  cursor: pointer;\n  position: relative;\n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  font-size: 18px;\n  font-weight: bold;\n  text-decoration: none;\n  color: #000000;\n  img {\n    display: block;\n    width: 100%;\n    height: auto;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport no_image from '../../images/no_image.png';\nimport PropTypes from 'prop-types';\nimport { Item, StyledLink } from './MovieItem.styled';\n\nconst MovieItem = ({ movies }) => {\n  const location = useLocation();\n  return movies.map(({ id, title, poster_path }) => (\n    <Item key={id}>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/original/${poster_path}`\n              : { no_image }\n          }\n          alt={title}\n          width=\"350\"\n        />\n        <p>{title}</p>\n      </StyledLink>\n    </Item>\n  ));\n};\n\nMovieItem.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieItem;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 20px;\n  list-style: none;\n  padding: 0;\n`;\n\nexport default List;\n","import MovieItem from 'components/MovieItem/MovieItem';\nimport PropTypes from 'prop-types';\nimport List from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <List>\n      <MovieItem movies={movies} />\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const SearchContainer = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  color: #fff;\n  background-color: #4e8fde;\n`;\n","import { useForm } from 'react-hook-form';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { SearchContainer } from './Form.styled';\n\nconst Form = ({ onSubmit }) => {\n  const { register, handleSubmit } = useForm();\n\n  return (\n    <SearchContainer>\n      <Form\n        autoComplete=\"off\"\n        onSubmit={handleSubmit(({ query }) => onSubmit(query))}\n      >\n        <input\n          {...register('query')}\n          autoFocus\n          placeholder=\"Search movie\"\n          size={40}\n        ></input>\n        <button type=\"submit\">\n          <span>\n            <AiOutlineSearch width=\"16px\" height=\"16px\" />\n          </span>\n        </button>\n      </Form>\n    </SearchContainer>\n  );\n};\n\nexport default Form;\n","import MovieList from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieSearch } from 'servise/fetchAPI';\nimport Form from '../../components/Form/Form.js';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [queryParams, setQueryParams] = useSearchParams();\n\n  useEffect(() => {\n    fetchMovieSearch(queryParams).then(({ data }) => {\n      setMovies(data.results);\n    });\n  }, [queryParams]);\n\n  const upDateQuerySting = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setQueryParams(nextParams);\n  };\n  return (\n    <>\n      <Form onSubmit={upDateQuerySting} />\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst KEY = 'db6a7f7c3b24f4239f0433ba9f35bbff';\nconst BAZE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BAZE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n  return response;\n}\n\nexport async function fetchMovieSearch(query) {\n  const response = await axios.get(\n    `${BAZE_URL}/search/movie?api_key=${KEY}&${query}`\n  );\n  return response;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`${BAZE_URL}/movie/${id}?api_key=${KEY}`);\n  return response;\n}\n\nexport async function fetchCreditsById(id) {\n  const response = await axios.get(\n    `${BAZE_URL}/movie/${id}/credits?api_key=${KEY}`\n  );\n  return response;\n}\n\nexport async function fetchReviewsById(id) {\n  const response = await axios.get(\n    `${BAZE_URL}/movie/${id}/reviews?api_key=${KEY}`\n  );\n  return response;\n}\n"],"names":["Item","styled","StyledLink","NavLink","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","no_image","alt","width","SearchContainer","Form","onSubmit","useForm","register","handleSubmit","autoComplete","query","autoFocus","placeholder","size","type","height","useState","setMovies","useSearchParams","queryParams","setQueryParams","useEffect","fetchMovieSearch","then","data","results","MovieList","KEY","BAZE_URL","fetchTrendingMovies","axios","response","fetchMovieById","fetchCreditsById"],"sourceRoot":""}