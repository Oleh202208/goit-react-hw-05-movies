{"version":3,"file":"static/js/105.883776da.chunk.js","mappings":"0PAEaA,EAAaC,EAAAA,GAAAA,GAAH,0EAMVC,EAAaD,EAAAA,GAAAA,GAAH,yVAmBVE,EAAaF,EAAAA,GAAAA,EAAH,8CAIVG,EAAaH,EAAAA,GAAAA,KAAH,8C,SCGvB,EAxBoB,WAClB,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAAII,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAWM,EAAKC,QAA9B,GACzB,GAAE,CAACN,KAGF,gCACGF,EAAQS,OAAS,IAAK,sEACvB,SAACf,EAAD,UACGM,EAAQU,KAAI,WAAsBC,GAAtB,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,UAACjB,EAAD,YACE,SAACE,EAAD,sBACCc,GACD,SAACf,EAAD,UAAagB,MAHEF,EADN,QAUpB,C,2KC9BKG,EAAM,mCACNC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAFvC,cACCI,EADD,yBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,YACsBM,IAFxC,cACCF,EADD,yBAIEA,GAJF,kEAOA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,uFACkBe,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+Bb,EAA/B,oBAA6CY,IAD/D,cACCI,EADD,yBAEEA,GAFF,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCnB,GAAhC,uFACkBe,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAb,EADA,4BACsBY,IAFxC,cACCI,EADD,yBAIEA,GAJF,kE","sources":["pages/ReviewsPage/ReviewsPage.styled.jsx","pages/ReviewsPage/ReviewsPage.js","servise/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 1rem;\n  padding: 1rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  border-radius: 0.5rem;\n  background-color: #fff;\n  h3 {\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 600;\n  }\n  p {\n    margin: 0;\n    font-size: 0.9rem;\n    line-height: 1.5;\n  }\n`;\n\nexport const ReviewText = styled.p`\n  padding: 10px 0 0;\n`;\n\nexport const ReviewSpan = styled.span`\n  font-weight: bold;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieById } from 'servise/fetchAPI';\nimport {\n  ReviewItem,\n  ReviewList,\n  ReviewSpan,\n  ReviewText,\n} from './ReviewsPage.styled';\n\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchMovieById(id).then(({ data }) => setReviews(data.results));\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length < 1 && <p>We don't have any reviews for this movie.</p>}\n      <ReviewList>\n        {reviews.map(({ author, content }, index) => (\n          <ReviewItem key={index}>\n            <ReviewSpan>Author:</ReviewSpan>\n            {author}\n            <ReviewText>{content}</ReviewText>\n          </ReviewItem>\n        ))}\n      </ReviewList>\n    </>\n  );\n};\n\nexport default ReviewsPage;\n","import axios from 'axios';\n\nconst KEY = 'db6a7f7c3b24f4239f0433ba9f35bbff';\nconst BAZE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BAZE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n  return response;\n}\n\nexport async function fetchMovieSearch(query) {\n  const response = await axios.get(\n    `${BAZE_URL}/search/movie?api_key=${KEY}&${query}`\n  );\n  return response;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`${BAZE_URL}/movie/${id}?api_key=${KEY}`);\n  return response;\n}\n\nexport async function fetchCreditsById(id) {\n  const response = await axios.get(\n    `${BAZE_URL}/movie/${id}/credits?api_key=${KEY}`\n  );\n  return response;\n}\n\nexport async function fetchReviewsById(id) {\n  const response = await axios.get(\n    `${BAZE_URL}/movie/${id}/reviews?api_key=${KEY}`\n  );\n  return response;\n}\n"],"names":["ReviewList","styled","ReviewItem","ReviewText","ReviewSpan","useState","reviews","setReviews","id","useParams","useEffect","fetchMovieById","then","data","results","length","map","index","author","content","KEY","BAZE_URL","fetchTrendingMovies","axios","response","fetchMovieSearch","query","fetchCreditsById"],"sourceRoot":""}