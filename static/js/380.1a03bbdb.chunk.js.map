{"version":3,"file":"static/js/380.1a03bbdb.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.js","components/MovieInformationAdd/MovieInformationAdd.styled.jsx","components/MovieInformationAdd/MovieInformationAdd.js","pages/MovieDetalis/MovieDetalis.styled.jsx","pages/MovieDetalis/MovieDetalis.js","servise/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\nexport const MovieInformation = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 20px;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const MovieDescription = styled.p`\n  font-size: 16px;\n  line-height: 1.4;\n  margin-bottom: 10px;\n`;\n\nexport const MovieSpan = styled.span`\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport const MovieImage = styled.img`\n  box-shadow: rgb(0 0 0 / 20%) 0px 0px 10px;\n  border-radius: 10px;\n  text-align: center;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  MovieContainer,\n  MovieDescription,\n  MovieInformation,\n  MovieSpan,\n  MovieTitle,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({ movie }) => {\n  const { title, vote_average, overview, poster_path, genres, release_date } =\n    movie;\n\n  return (\n    <MovieContainer>\n      <img src={poster_path} alt={title} width=\"300\" />\n      <MovieInformation>\n        <MovieTitle>\n          {title} {release_date}\n        </MovieTitle>\n        {vote_average && (\n          <MovieDescription>\n            <MovieSpan>User Score: </MovieSpan>\n            {`${Math.round(vote_average * 10)}%`}\n          </MovieDescription>\n        )}\n        {overview && (\n          <MovieDescription>\n            <MovieSpan>Overview: </MovieSpan>\n            {overview}\n          </MovieDescription>\n        )}\n        {genres && (\n          <MovieDescription>\n            <MovieSpan>Genres: </MovieSpan>\n            {genres}\n          </MovieDescription>\n        )}\n      </MovieInformation>\n    </MovieContainer>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    vote_average: PropTypes.number,\n    title: PropTypes.string,\n    overview: PropTypes.string,\n    poster_path: PropTypes.string,\n    genres: PropTypes.string,\n    release_date: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieInfo;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  &:nth-last-child(2) {\n    margin-right: 30px;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  display: inline-block;\n  padding: 5px 10px;\n  width: 60px;\n  border-radius: 0.25rem;\n  font-size: 1rem;\n  font-weight: 600;\n  text-align: center;\n  text-decoration: none;\n  color: #fff;\n  background-color: #0b2c6e;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: background-color 0.2s ease-in-out;\n  &.active {\n    background-color: #1a31de;\n  }\n`;\n","import { Outlet, useLocation } from 'react-router-dom';\nimport { Item, Link, List } from './MovieInformationAdd.styled';\n\nconst MovieInformationAdd = () => {\n  const location = useLocation();\n  const backLink = location.state?.from ?? `movies`;\n\n  return (\n    <div>\n      <h3>Additional information</h3>\n      <List>\n        <Item>\n          <Link to=\"cast\" state={{ from: backLink }}>\n            Cast\n          </Link>\n        </Item>\n        <Item>\n          <Link to=\"reviews\" state={{ from: backLink }}>\n            Reviews\n          </Link>\n        </Item>\n      </List>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieInformationAdd;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  background-color: #0b2c6e;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  margin: 0 0 10px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out;\n  &:hover {\n    background-color: #1a31de;\n  }\n`;\nexport const SpanForSVG = styled.span`\n  display: flex;\n  align-items: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { fetchMovieById } from '../../servise/fetchAPI';\nimport no_image from '../../images/no_image.png';\nimport MovieInfo from '../../components/MovieInfo/MovieInfo';\nimport MovieInformationAdd from '../../components/MovieInformationAdd/MovieInformationAdd';\nimport { Button, SpanForSVG } from './MovieDetalis.styled';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMovieById(id)\n      .then(({ data }) => {\n        const {\n          title,\n          vote_average,\n          overview,\n          poster_path,\n          genres,\n          release_date,\n        } = data;\n        const movieInfo = {\n          title,\n          release_date: release_date.slice(0, 4),\n          vote_average,\n          overview,\n          poster_path: poster_path\n            ? `https://image.tmdb.org/t/p/original/${poster_path}`\n            : no_image,\n          genres: genres.map(({ name }) => name).join(', '),\n        };\n\n        setMovie(movieInfo);\n      })\n      .catch(error => console.error(error));\n  }, [id]);\n\n  const backLink = location.state?.from ?? 'movies';\n\n  return (\n    <>\n      <Button type=\"click\" onClick={() => navigate(backLink)}>\n        <SpanForSVG>\n          <svg width=\"28\" height=\"28\" viewBox=\"0 0 24 24\" fill=\"white\">\n            <path d=\"M8.59 12L14.59 6L16 7.41L11.83 11H20v2H11.83L16 16.59L14.59 18L8.59 12Z\" />\n          </svg>\n        </SpanForSVG>\n      </Button>\n      <MovieInfo movie={movie} />\n      <MovieInformationAdd />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = 'db6a7f7c3b24f4239f0433ba9f35bbff';\nconst BAZE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BAZE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n  return response;\n}\n\nexport async function fetchMovieSearch(query) {\n  const response = await axios.get(\n    `${BAZE_URL}/search/movie?api_key=${KEY}&${query}`\n  );\n  return response;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`${BAZE_URL}/movie/${id}?api_key=${KEY}`);\n  return response;\n}\n\nexport async function fetchCreditsById(id) {\n  const response = await axios.get(\n    `${BAZE_URL}/movie/${id}/credits?api_key=${KEY}`\n  );\n  return response;\n}\n\nexport async function fetchReviewsById(id) {\n  const response = await axios.get(\n    `${BAZE_URL}/movie/${id}/reviews?api_key=${KEY}`\n  );\n  return response;\n}\n"],"names":["MovieContainer","styled","MovieInformation","MovieTitle","MovieDescription","MovieSpan","movie","title","vote_average","overview","poster_path","genres","release_date","src","alt","width","Math","round","List","Item","Link","NavLink","backLink","useLocation","state","from","to","Button","SpanForSVG","id","useParams","useState","setMovie","location","navigate","useNavigate","useEffect","fetchMovieById","then","data","movieInfo","slice","no_image","map","name","join","catch","error","console","type","onClick","height","viewBox","fill","d","KEY","BAZE_URL","fetchTrendingMovies","axios","response","fetchMovieSearch","query","fetchCreditsById","fetchReviewsById"],"sourceRoot":""}